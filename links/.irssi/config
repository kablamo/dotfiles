servers = (
  { address = "irc.perl.org";      chatnet = "perl";      port = "6667"; },
  { address = "irc.ubuntu.com";    chatnet = "ubuntu";    port = "8001"; },
  { address = "eu.irc6.net";       chatnet = "ircnet";    port = "6667"; },
  { address = "open.ircnet.net";   chatnet = "ircnet";    port = "6667"; },
  { address = "irc.efnet.org";     chatnet = "efnet";     port = "6667"; },
  { address = "irc.undernet.org";  chatnet = "undernet";  port = "6667"; },
  { address = "irc.dal.net";       chatnet = "dalnet";    port = "6667"; },
  { address = "irc.quakenet.org";  chatnet = "quakenet";  port = "6667"; },
  { address = "irc.oftc.net";      chatnet = "oftc";      port = "6667"; },
  { address = "irc.gamesurge.net"; chatnet = "gamesurge"; port = "6667"; },
  { address = "irc.webchat.org";   chatnet = "webchat";   port = "6667"; },
  { address = "irc.rizon.net";     chatnet = "rizon";     port = "6667"; },
  { address = "irc.link-net.org";  chatnet = "linknet";   port = "6667"; },
  { address = "silc.silcnet.org";  chatnet = "silc";      port = "706" ; }
);

chatnets = {
  perl      = { type = "IRC"; max_kicks = "4"; max_msgs = "5"; max_whois = "4"; max_query_chans = "5"; };
  ircnet    = { type = "IRC"; max_kicks = "4"; max_msgs = "5"; max_whois = "4"; max_query_chans = "5"; };
  efnet     = { type = "IRC"; max_kicks = "4"; max_msgs = "3"; max_whois = "1"; };
  undernet  = { type = "IRC"; max_kicks = "1"; max_msgs = "3"; max_whois = "30"; };
  dalnet    = { type = "IRC"; max_kicks = "4"; max_msgs = "3"; max_whois = "30"; };
  quakenet  = { type = "IRC"; max_kicks = "1"; max_msgs = "3"; max_whois = "30"; };
  oftc      = { type = "IRC"; max_kicks = "1"; max_msgs = "3"; max_whois = "30"; };
  gamesurge = { type = "IRC"; max_kicks = "1"; max_msgs = "3"; max_whois = "30"; };
  webchat   = { type = "IRC"; max_kicks = "1"; max_msgs = "3"; max_whois = "30"; };
  rizon     = { type = "IRC"; max_kicks = "1"; max_msgs = "3"; max_whois = "30"; };
  linknet   = { type = "IRC"; max_kicks = "1"; max_msgs = "3"; max_whois = "30"; };
  silc      = { type = "SILC"; };
  ubuntu    = { type = "IRC"; };
};

channels = (
  { name = "#irssi"; chatnet = "ircnet"; autojoin = "No"; },
  { name = "silc";   chatnet = "silc";   autojoin = "No"; }
);

aliases = {
  J                = "join";
  WJOIN            = "join -window";
  WQUERY           = "query -window";
  LEAVE            = "part";
  BYE              = "quit";
  EXIT             = "quit";
  SIGNOFF          = "quit";
  DESCRIBE         = "action";
  DATE             = "time";
  HOST             = "userhost";
  LAST             = "lastlog";
  SAY              = "msg *";
  WI               = "whois";
  WII              = "whois $0 $0";
  WW               = "whowas";
  W                = "who";
  N                = "names";
  M                = "msg";
  T                = "topic";
  C                = "clear";
  CL               = "clear";
  K                = "kick";
  KB               = "kickban";
  KN               = "knockout";
  BANS             = "ban";
  B                = "ban";
  MUB              = "unban *";
  UB               = "unban";
  IG               = "ignore";
  UNIG             = "unignore";
  SB               = "scrollback";
  UMODE            = "mode $N";
  WC               = "window close";
  WN               = "window new hide";
  SV               = "say Irssi $J ($V) - http://irssi.org/";
  GOTO             = "sb goto";
  CHAT             = "dcc chat";
  RUN              = "SCRIPT LOAD";
  CALC             = "exec - if command -v bc >/dev/null 2>&1\\; then printf '%s                                                                                        = ' '$*'\\; echo '$*' | bc -l\\; else echo bc was not found\\; fi";
  SBAR             = "STATUSBAR";
  INVITELIST       = "mode $C +I";
  Q                = "QUERY";
  "MANUAL-WINDOWS" = "set use_status_window off;set autocreate_windows off;set autocreate_query_level none;set autoclose_windows off;set reuse_unused_windows on;save";
  EXEMPTLIST       = "mode $C +e";
  ATAG             = "WINDOW SERVER";
  UNSET            = "set -clear";
  RESET            = "set -default";
};

statusbar = {
  # formats:
  # when using {templates}, the template is shown only if it's argument isn't
  # empty unless no argument is given. for example {sb} is printed always,
  # but {sb $T} is printed only if $T isn't empty.

  items = {
    # start/end text in statusbars
    barstart = "{sbstart}";
    barend   = "{sbend}";

    topicbarstart = "{topicsbstart}";
    topicbarend   = "{topicsbend}";

    # treated "normally", you could change the time/user name to whatever
    time = "{sb $Z}";
    user = "";
  # user = "{sb {sbnickmode $cumode}$N{sbmode $usermode}{sbaway $A}}";

    # treated specially .. window is printed with non-empty windows,
    # window_empty is printed with empty windows
    window       = "{sb $winref:$itemname{sbmode $M}}";
    window_empty = "{sb $winref{sbservertag $tag}}";
    prompt       = "{prompt $[.15]itemname}";
    prompt_empty = "{prompt $winname}";
    topic        = "      %K>%w>%W> $topic";
    topic_empty  = " ";

    # all of these treated specially, they're only displayed when needed
    lag  = "{sb lag: $0-}";
    act  = "{sb $0-}";
    more = "-- more --";
  };

  # there's two type of statusbars. root statusbars are either at the top
  # of the screen or at the bottom of the screen. window statusbars are at
  # the top/bottom of each split window in screen.
  default = {
    # the "default statusbar" to be displayed at the bottom of the window.
    # contains all the normal items.
    window = {
      disabled  = "no";
      type      = "window"; # window, root
      placement = "bottom"; # top, bottom
      position  = "1";      # number
      visible   = "active"; # active, inactive, always

      # list of items in statusbar in the display order
      items = {
        barstart     = { priority = "100"; };
        time         = { };
        user         = { };
        window       = { };
        window_empty = { };
        lag          = { priority = "-1"; };
        act          = { priority = "10"; };
        more         = { priority = "-1";  alignment = "right"; };
        barend       = { priority = "100"; alignment = "right"; };
      };
    };

    # statusbar to use in inactive split windows
    window_inact = {
      type      = "window";
      placement = "bottom";
      position  = "1";
      visible   = "inactive";
      items     = {
        barstart     = { priority = "100"; };
        window       = { };
        window_empty = { };
        more         = { priority = "-1"; alignment  = "right"; };
        barend       = { priority = "100"; alignment = "right"; };
      };
    };

    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.
    prompt = {
      type      = "root";
      placement = "bottom";
      # we want to be at the bottom always
      position = "100";
      visible  = "always";
      items    = {
        prompt       = { priority = "-1"; };
        prompt_empty = { priority = "-1"; };
        # treated specially, this is the real input line.
        input        = { priority = "10"; };
      };
    };

    # topicbar
    topic = {
      type      = "root";
      placement = "top";
      position  = "1";
      visible   = "always";
      items     = {
        topicbarstart = { priority = "100"; };
        topic         = { };
        topic_empty   = { };
        topicbarend   = { priority = "100"; alignment = "right"; };
      };
    };
  };
};

settings = {
  core = { 
    real_name = "Eric Johnson";
    user_name = "kablamo";
    nick      = "kablamo";
  };
  "fe-text" = { actlist_sort = "refnum"; };
  "fe-common/core" = {
    emphasis             = "ON";
    theme                = "themes/iijo";
    beep_msg_level       = "NOTICE MSGS HILIGHT";
    bell_beeps           = "no";
    hilight_nick_matches = "yes";
  };
};
keyboard = ( 
  { key = "^1"; id = "multi"; data = "change_window 1"; },
  { key = "^2"; id = "multi"; data = "change_window 2"; },
);
